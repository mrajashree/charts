{{- if .Values.NFS.Enabled }}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nfs.fullname" . }}-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: [{{ template "nfs.fullname" . }}]
    verbs: ["use"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-{{ template "nfs.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "nfs.fullname" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ template "nfs.fullname" . }}-runner
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "nfs.fullname" . }}
  labels:
    app: {{ template "nfs.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "nfs.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccount: {{ template "nfs.fullname" . }}
      containers:
        - name: nfs-provisioner
          image: "{{ .Values.NFS.image.repository }}:{{ .Values.NFS.image.tag }}"
          imagePullPolicy: {{ .Values.NFS.image.pullPolicy }}
          ports:
            - name: nfs
              containerPort: 2049
              hostPort: {{ .Values.NFS.HostPort }}
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            capabilities:
              add:
                - DAC_READ_SEARCH
                - SYS_RESOURCE
          args:
            - "-provisioner=local.net/{{ template "nfs.fullname" . }}"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: export-volume
              mountPath: /export
      volumes:
        - name: export-volume
          hostPath:
            path: {{ .Values.NFS.Persistence.hostPath }}
---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ template "nfs.fullname" . }}
spec:
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - DAC_READ_SEARCH
  - SYS_RESOURCE
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - secret
  - hostPath
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "nfs.fullname" . }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ template "nfs.fullname" . }}
  {{- if .Values.NFS.Persistence.defaultClass }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  {{- else }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "false"
  {{- end }}
  labels:
    kubernetes.io/cluster-service: "true"
provisioner: local.net/{{ template "nfs.fullname" . }}
{{- end }}
